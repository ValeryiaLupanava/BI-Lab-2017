WITH 
  T as 
    (
    SELECT
      DISTINCT PR.PROD_NAME as PRODUCT_NAME, 
      NTH_VALUE(SUM(AMOUNT_SOLD),1) OVER (PARTITION BY PR.PROD_NAME ORDER BY TM.CALENDAR_QUARTER_NUMBER ASC RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS Q1,
      NTH_VALUE(SUM(AMOUNT_SOLD),2) OVER (PARTITION BY PR.PROD_NAME ORDER BY TM.CALENDAR_QUARTER_NUMBER ASC RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS Q2,
      NTH_VALUE(SUM(AMOUNT_SOLD),3) OVER (PARTITION BY PR.PROD_NAME ORDER BY TM.CALENDAR_QUARTER_NUMBER ASC RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS Q3,
      NTH_VALUE(SUM(AMOUNT_SOLD),4) OVER (PARTITION BY PR.PROD_NAME ORDER BY TM.CALENDAR_QUARTER_NUMBER ASC RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS Q4,
      SUM(SUM(AMOUNT_SOLD)) OVER (PARTITION BY PR.PROD_NAME) AS YEAR_SUM
FROM  SALES SL LEFT JOIN TIMES TM ON SL.TIME_ID = TM.TIME_ID
               LEFT JOIN PRODUCTS PR ON SL.PROD_ID = PR.PROD_ID
               LEFT JOIN CUSTOMERS CS ON SL.CUST_ID = CS.CUST_ID
               LEFT JOIN COUNTRIES CN ON CS.COUNTRY_ID = CN.COUNTRY_ID
WHERE PR.PROD_CATEGORY LIKE 'Photo'
  AND TO_CHAR(SL.TIME_ID,'YYYY') = '2000'
  AND CN.COUNTRY_SUBREGION = 'Asia'
GROUP BY PR.PROD_NAME, TM.CALENDAR_QUARTER_NUMBER)
SELECT decode(GROUPING(PRODUCT_NAME),0,PRODUCT_NAME,'GRAND TOTAL') as PRODUCT_NAME, 
       SUM(Q1) as Q1, SUM(Q2)  as Q2, SUM(Q3) as Q3, SUM(Q4) as Q4
  FROM T
 GROUP BY ROLLUP(PRODUCT_NAME)
 ORDER BY T.PRODUCT_NAME NULLS LAST;